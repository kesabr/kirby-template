@charset "UTF-8";
/* Libraries */
.glide {
  position: relative;
  width: 100%;
  box-sizing: border-box;
}
.glide * {
  box-sizing: inherit;
}
.glide__track {
  overflow: hidden;
}
.glide__slides {
  position: relative;
  width: 100%;
  list-style: none;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  touch-action: pan-Y;
  overflow: hidden;
  margin: 0;
  padding: 0;
  white-space: nowrap;
  display: flex;
  flex-wrap: nowrap;
  will-change: transform;
}
.glide__slides--dragging {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.glide__slide {
  width: 100%;
  height: 100%;
  flex-shrink: 0;
  white-space: normal;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  -webkit-touch-callout: none;
  -webkit-tap-highlight-color: transparent;
}
.glide__slide a {
  -webkit-user-select: none;
          user-select: none;
  -webkit-user-drag: none;
  -moz-user-select: none;
  -ms-user-select: none;
}
.glide__arrows {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.glide__bullets {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
.glide--rtl {
  direction: rtl;
}

.glide__arrow {
  position: absolute;
  display: block;
  top: 50%;
  z-index: 2;
  color: white;
  text-transform: uppercase;
  padding: 9px 12px;
  background-color: transparent;
  border: 2px solid rgba(255, 255, 255, 0.5);
  border-radius: 4px;
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.1);
  text-shadow: 0 0.25em 0.5em rgba(0, 0, 0, 0.1);
  opacity: 1;
  cursor: pointer;
  transition: opacity 150ms ease, border 300ms ease-in-out;
  transform: translateY(-50%);
  line-height: 1;
}
.glide__arrow:focus {
  outline: none;
}
.glide__arrow:hover {
  border-color: white;
}
.glide__arrow--left {
  left: 2em;
}
.glide__arrow--right {
  right: 2em;
}
.glide__arrow--disabled {
  opacity: 0.33;
}
.glide__bullets {
  position: absolute;
  z-index: 2;
  bottom: 2em;
  left: 50%;
  display: inline-flex;
  list-style: none;
  transform: translateX(-50%);
}
.glide__bullet {
  background-color: rgba(255, 255, 255, 0.5);
  width: 9px;
  height: 9px;
  padding: 0;
  border-radius: 50%;
  border: 2px solid transparent;
  transition: all 300ms ease-in-out;
  cursor: pointer;
  line-height: 0;
  box-shadow: 0 0.25em 0.5em 0 rgba(0, 0, 0, 0.1);
  margin: 0 0.25em;
}
.glide__bullet:focus {
  outline: none;
}
.glide__bullet:hover, .glide__bullet:focus {
  border: 2px solid white;
  background-color: rgba(255, 255, 255, 0.5);
}
.glide__bullet--active {
  background-color: white;
}
.glide--swipeable {
  cursor: grab;
  cursor: -webkit-grab;
}
.glide--dragging {
  cursor: grabbing;
  cursor: -webkit-grabbing;
}

/* Site */
/* Box sizing rules */
html {
  box-sizing: border-box;
}

*,
*:before,
*:after {
  box-sizing: inherit;
}

/* Remove margin and padding */
body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
figure,
blockquote,
dl,
dd {
  margin: 0;
  padding: 0;
}

/* Set core body defaults */
body {
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  font-size: 1.4rem;
  line-height: normal;
}

/* Remove list styles (reset `ul`, `ol` elements) */
ul,
ol {
  list-style: none;
}

/* A elements that don't have a class get default styles */
a {
  text-decoration: none;
  color: inherit;
}

/* Remove border on images inside links in IE 10/11 */
img {
  border-style: none;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

/* Reset headline size and weight */
h1,
h2,
h3,
h4,
h5,
h6 {
  color: inherit;
  font-weight: normal;
  font-size: 1.4rem;
  line-height: normal;
}

/* Remove outline on active links */
a:focus {
  outline: none;
}

/* Clear floats */
.clearfix::after {
  content: "";
  display: table;
  clear: both;
}

/* Remove button styles */
button {
  background: none;
  color: inherit;
  border: none;
  padding: 0;
  font: inherit;
  cursor: pointer;
  outline: inherit;
}

:root {
  /* Buttons */
  --burger-button-width: 60px;
  --burger-button-height: 40px;
  --burger-button-stroke: 5px;
  /* Typography */
  --font-size-xxs: clamp(0.7813rem, 0.7788rem + 0.0131vw, 0.8rem);
  --font-size-xs: clamp(0.9375rem, 0.9295rem + 0.0437vw, 1rem);
  --font-size-sm: clamp(1.125rem, 1.109rem + 0.0875vw, 1.25rem);
  --font-size-md: clamp(1.35rem, 1.3228rem + 0.1487vw, 1.5625rem);
  --font-size-lg: clamp(1.62rem, 1.5773rem + 0.2331vw, 1.9531rem);
  --font-size-xl: clamp(1.9438rem, 1.88rem + 0.3481vw, 2.4413rem);
  --font-size-xxl: clamp(2.3325rem, 2.2403rem + 0.5033vw, 3.0519rem);
  --font-size-xxxl: clamp(2.7994rem, 2.6693rem + 0.7105vw, 3.815rem);
  --line-height-xxs: 1.8;
  --line-height-xs: 1.6;
  --line-height-sm: 1.4;
  --line-height-md: 1.2;
  --line-height-lg: 1.0;
  --line-height-xl: 0.8;
  --font-weight-100: 100;
  --font-weight-200: 200;
  --font-weight-300: 300;
  --font-weight-400: 400;
  --font-weight-500: 500;
  --font-weight-600: 600;
  --font-weight-700: 700;
  --font-weight-800: 800;
  --font-weight-900: 900;
  /* Colors */
  --color-primary: rgb(10, 10, 10);
  --color-secondary: rgb(240, 240, 240);
  --color-accent: rgb(255, 0, 0);
  /* Margins */
  --margin-xxs: calc(.5 * 8px);
  --margin-xs: calc(1 * 8px);
  --margin-sm: calc(2 * 8px);
  --margin-md: calc(4 * 8px);
  --margin-lg: calc(6 * 8px);
  --margin-xl: calc(12 * 8px);
  --margin-xxl: calc(20 * 8px);
  /* Container */
  --container__width: min(100%, 1200px);
  /* Breakingpoints */
  --breakpoint-xs: 280px;
  --breakpoint-sm: 480px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 1024px;
  --breakpoint-xl: 1300px;
  /* Icons */
  --icon-size: 60px;
  --icon-color: var(--color-primary);
  /* Links and Anchors*/
  --link-color: var(--color-accent);
}

@font-face {
  font-family: "Farrari";
  src: url("/assets/fonts/farrari-beta.ttf") format("truetype"), url("/assets/fonts/farrari-beta.ttf") format("woff"), url("/assets/fonts/farrari-beta.ttf") format("woff2");
  font-weight: normal;
  font-style: normal;
}
/* -------------------------------------------------------- */
h1,
h2,
h3 {
  font-size: var(--font-size-xl);
  line-height: var(--line-height-lg);
  font-variation-settings: "wght" var(--font-weight-700);
  color: inherit;
}

h4,
h5,
h6 {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  font-variation-settings: "wght" var(--font-weight-700);
  color: inherit;
}

body {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  font-variation-settings: "wght" var(--font-weight-400);
  font-family: "Farrari", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  color: var(--color-primary);
}

.heading {
  font-size: var(--font-size-xl);
  line-height: var(--line-height-lg);
  font-variation-settings: "wght" var(--font-weight-700);
}

.subheading {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  font-variation-settings: "wght" var(--font-weight-700);
}

.text {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  font-variation-settings: "wght" var(--font-weight-400);
}

.infotext {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  font-family: "Farrari", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  font-variation-settings: "wght" var(--font-weight-400);
}

a {
  color: var(--link-color);
}

/* GRID */
/* Grid Container */
.grid-container {
  display: grid;
  grid-template-columns: repeat(24, 1fr);
  gap: clamp(var(--margin-xs), var(--margin-xs) + 0.2vw, var(--margin-sm));
  margin-block: clamp(var(--margin-xs), var(--margin-xs) + 0.2vw, var(--margin-sm));
  /* All children have * full column width * by default */
}
.grid-container > * {
  grid-column: span 24;
}

/* All items have * full column width * by default */
.grid-item-100,
.grid-item-75,
.grid-item-66,
.grid-item-50,
.grid-item-33,
.grid-item-25,
.grid-item-12,
.grid-item-100-m,
.grid-item-75-m,
.grid-item-66-m,
.grid-item-50-m,
.grid-item-33-m,
.grid-item-25-m,
.grid-item-12-m {
  grid-column: span 24;
}

/* These grid items stay in * 2 columns * down to small devices */
@media (min-width: 480px) {
  .grid-item-50-m,
  .grid-item-33-m,
  .grid-item-25-m,
  .grid-item-12-m {
    grid-column: span 12;
  }
  .grid-item-75-m,
  .grid-item-66-m {
    grid-column: span 18;
  }
}
/* These grid items stay in * 2 columns * down to medium devices */
@media (min-width: 768px) {
  .grid-item-50,
  .grid-item-33,
  .grid-item-25,
  .grid-item-12 {
    grid-column: span 12;
  }
  .grid-item-75,
  .grid-item-66 {
    grid-column: span 18;
  }
}
/* All grid items reach full variety on large devices */
@media (min-width: 1024px) {
  .grid-item-66 {
    grid-column: span 16;
  }
  .grid-item-33 {
    grid-column: span 8;
  }
  .grid-item-25 {
    grid-column: span 6;
  }
  .grid-item-12 {
    grid-column: span 4;
  }
}
/* Gap setting utility classes */
.no-gap {
  gap: 0;
}

.no-rowgap {
  row-gap: 0;
}

.no-columngap {
  -moz-column-gap: 0;
       column-gap: 0;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

figcaption {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);
  font-family: "Farrari", system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  font-variation-settings: "wght" var(--font-weight-400);
}

/* Image Blocks */
figure.block-type-image {
  width: 100%;
}
figure.block-type-image img {
  max-width: 100%;
}
figure.block-type-image[data-ratio] img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

/**
 *  Gallery – with glide.js
 * 
 *  Builds on: 
 * 
 *  "assets/scss/components/gallery.scss"
 *      "node_modules/@glidejs/glide/src/assets/sass/glide.core.scss"

 *  "site/snippets/blocks/gallery.php"

 *  "site/snippets/components/glide.php"
 *      "node_modules/@glidejs/glide/dist/glide.min.js"
*/
/* The gallery can either show several images next (slider) to each other or one at a time (classic) */
.gallery-container,
.block-type-gallery {
  position: relative;
  width: 100%;
  height: auto;
  overflow-x: hidden;
}
.gallery-container figure.gallery-item,
.block-type-gallery figure.gallery-item {
  height: 100%;
  width: 100%;
  aspect-ratio: inherit;
}
.gallery-container figure.gallery-item img,
.block-type-gallery figure.gallery-item img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.gallery-container figure.gallery-item figcaption,
.block-type-gallery figure.gallery-item figcaption {
  padding: var(--margin-md);
}

.slider-nav {
  position: absolute;
  bottom: var(--margin-md);
  left: 50%;
  transform: translateX(-50%);
  width: -moz-fit-content;
  width: fit-content;
  display: flex;
  gap: var(--margin-sm);
  cursor: pointer;
}
.slider-nav .slider-nav-circle {
  width: 10px;
  height: 10px;
  background-color: rgb(100, 100, 100);
  transition: background-color 0.3s ease;
  border-radius: 50%;
}
.slider-nav .slider-nav-circle.active {
  background-color: rgb(0, 0, 0);
}

#menu-button {
  width: var(--burger-button-width);
  height: var(--burger-button-height);
  margin-top: calc(var(--burger-button-width) - var(--burger-button-height));
  position: relative;
  cursor: pointer;
}
#menu-button span {
  display: block;
  position: absolute;
  height: var(--burger-button-stroke);
  width: 100%;
  background: var(--color-primary);
  opacity: 1;
  left: 0;
  transition: 0.25s ease-in-out;
}
#menu-button span.bar1 {
  top: 0;
  transform-origin: left center;
}
#menu-button span.bar2 {
  top: calc(50% - var(--burger-button-stroke) / 2);
  transform-origin: left center;
}
#menu-button span.bar3 {
  top: calc(100% - var(--burger-button-stroke));
  transform-origin: left center;
}
#menu-button.open span.bar1 {
  transform: rotate(45deg);
  top: calc(var(--burger-button-height) * -0.05);
  left: calc(var(--burger-button-width) * 0.1);
}
#menu-button.open span.bar2 {
  width: 0;
  opacity: 0;
}
#menu-button.open span.bar3 {
  transform: rotate(-45deg);
  top: calc(var(--burger-button-height) * 1.05);
  left: calc(var(--burger-button-width) * 0.1);
}

/* Arrows that are used to gether with text (mostly as <span class="arrow">) */
.arrow {
  position: relative;
  width: 0.8em;
  height: 1em;
  display: inline-block;
  font-size: inherit;
  line-height: inherit;
}
.arrow::before {
  content: "→";
  position: absolute;
  top: 0;
  left: 0;
  font-size: inherit;
  line-height: 1.3em;
  transition: top 0.3s ease, left 0.3s ease;
}
.arrow[data-orientation=right]::before {
  content: "→";
}
.arrow[data-orientation=down-right]::before {
  content: "↘";
}
.arrow[data-orientation=down]::before {
  content: "↓";
  line-height: 1.5em;
}
.arrow[data-orientation=down-left]::before {
  content: "↙";
}
.arrow[data-orientation=left]::before {
  content: "←";
}
.arrow[data-orientation=up-left]::before {
  content: "↖";
}
.arrow[data-orientation=up]::before {
  content: "↑";
  line-height: 1.4em;
}
.arrow[data-orientation=up-right]::before {
  content: "↗";
}

/* For Arrow-Buttons, where the button stands alone you can use an svg background arrow */
.arrow-button {
  position: relative;
  width: var(--icon-size);
  height: var(--icon-size);
  background-image: url("/assets/media/arrow-right.svg");
  cursor: pointer;
}
.arrow-button[data-orientation=right] {
  transform: rotate(0deg);
}
.arrow-button[data-orientation=down-right] {
  transform: rotate(45deg);
}
.arrow-button[data-orientation=down] {
  transform: rotate(90deg);
}
.arrow-button[data-orientation=down-left] {
  transform: rotate(135deg);
}
.arrow-button[data-orientation=left] {
  transform: rotate(180deg);
}
.arrow-button[data-orientation=up-left] {
  transform: rotate(225deg);
}
.arrow-button[data-orientation=up] {
  transform: rotate(270deg);
}
.arrow-button[data-orientation=up-right] {
  transform: rotate(315deg);
}

#text-cursor {
  position: fixed;
  display: none;
  pointer-events: none;
  transform: translate(-50%, -50%);
}

/**
 *  The Accordion builds on: 
 * 
 *  "site/blueprint/fields/accordion.yml"
 *  "assets/scss/components/accordion.scss"
 *  "site/snippets/components/accordion.php"
*/
.accoridon-container .accordion-item .item-title {
  border-top: 1px solid var(--color-primary);
  padding-block: var(--margin-xxs);
  display: flex;
  justify-content: space-between;
  cursor: pointer;
}
.accoridon-container .accordion-item .item-content {
  --item-height: 100vh;
  height: -moz-fit-content;
  height: fit-content;
  max-height: 0;
  overflow: hidden;
  margin-bottom: var(--margin-xs);
  transition: max-height 0.5s ease-out;
}
.accoridon-container .accordion-item .item-content.open {
  max-height: var(--item-height);
}
.accoridon-container .accordion-item .item-content .content-text {
  height: -moz-fit-content;
  height: fit-content;
}
.accoridon-container .accordion-item .item-content figure {
  aspect-ratio: 3/2;
}

.main-menu .menu-list-wrapper .menu-list {
  height: -moz-fit-content;
  height: fit-content;
  width: -moz-fit-content;
  width: fit-content;
  display: flex;
  gap: var(--margin-xs);
}
.main-menu .menu-list-wrapper .menu-list .menu-item .active {
  text-decoration: underline;
}

.container {
  width: 100%;
  padding-inline: var(--margin-sm);
  padding-block: var(--margin-xs);
}

div:has(.elements) {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  gap: 10px;
  height: 60vh;
}
div:has(.elements) .elements {
  width: calc(50% - 5px);
  padding: 20px;
  height: 50%;
  background-color: aquamarine;
}/*# sourceMappingURL=main.css.map */